#!/bin/bash
# Hook Installation Script
# Installs AegisIDE enforcement hooks into .git/hooks/
# Called by: setup.sh during framework installation

GITHUB_REPO="https://raw.githubusercontent.com/Gaurav-Wankhede/AegisIDE/main"
HOOKS_DIR=".git/hooks"

echo "ðŸ”§ Installing AegisIDE Enforcement Hooks..."

# Create hooks directory if it doesn't exist
mkdir -p "$HOOKS_DIR"

# Download and install pre-execution hook
echo "ðŸ“¥ Installing pre-execution hook..."
curl -sL "$GITHUB_REPO/src/.aegiside/enforcement/shell/hooks/pre-execution.sh" \
    > "$HOOKS_DIR/aegis-pre-execution"
chmod +x "$HOOKS_DIR/aegis-pre-execution"

# Download and install MCP chain validator
echo "ðŸ“¥ Installing MCP chain validator..."
curl -sL "$GITHUB_REPO/src/.aegiside/enforcement/shell/validators/mcp-chain-validator.sh" \
    > "$HOOKS_DIR/aegis-mcp-validator"
chmod +x "$HOOKS_DIR/aegis-mcp-validator"

# Download and install atomic transaction manager
echo "ðŸ“¥ Installing atomic transaction manager..."
curl -sL "$GITHUB_REPO/src/.aegiside/enforcement/shell/transactions/atomic-update.sh" \
    > "$HOOKS_DIR/aegis-atomic-update"
chmod +x "$HOOKS_DIR/aegis-atomic-update"

# Create Git pre-commit hook that calls our enforcement
cat > "$HOOKS_DIR/pre-commit" << 'EOF'
#!/bin/bash
# Git pre-commit hook - calls AegisIDE enforcement
# Auto-generated by install-hooks.sh

# Run AegisIDE pre-execution checks
if [ -x ".git/hooks/aegis-pre-execution" ]; then
    .git/hooks/aegis-pre-execution || exit 1
fi

# Continue with normal Git commit
exit 0
EOF

chmod +x "$HOOKS_DIR/pre-commit"

echo "âœ… Enforcement hooks installed successfully!"
echo ""
echo "Installed hooks:"
echo "  â€¢ .git/hooks/aegis-pre-execution (5 enforcement gates)"
echo "  â€¢ .git/hooks/aegis-mcp-validator (MCP chain validation)"
echo "  â€¢ .git/hooks/aegis-atomic-update (atomic transactions)"
echo "  â€¢ .git/hooks/pre-commit (Git integration)"
echo ""
echo "Hooks are now active and will enforce rules on every commit and execution."
