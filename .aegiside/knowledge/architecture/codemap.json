{
  "title": "AegisIDE v4.0+ Architecture: 3-Tier Hierarchical Structure for Progressive Disclosure",
  "description": "This codemap documents the AegisIDE v4.0+ architecture with 3-tier hierarchical routing. TIER-1 CORE (500 tokens, always loaded): main-router + context-orchestrator. TIER-2 DOMAIN (800-1.2K tokens, on-demand): ace-router, governance-router, architecture-router. TIER-3 RUNTIME/KNOWLEDGE (1-5K tokens, task-specific): 47 runtime files (ace workflows, memory state, optimization) + 50 knowledge files (constitution, enforcement, architecture, support). This structure achieves 91% token savings vs flat architecture. Key innovations: Hierarchical routing, semantic suite consolidation, tier-aware enforcement, progressive disclosure pattern.",
  "id": "AegisIDE_v4.0_Architecture_20251030_142700",
  "version": "4.0.0",
  "last_updated": "2025-10-30T14:27:00+05:30",
  "repository": "https://github.com/Gaurav-Wankhede/AegisIDE",
  "tier_structure": {
    "tier_1_core": {
      "total_files": 2,
      "tokens": 500,
      "loading": "always",
      "folders": ["core"],
      "files": ["main-router.json", "context-orchestrator.json"],
      "access_pattern": "jq (no @mcp)",
      "mutability": "static",
      "purpose": "Entry point, domain routing, 3 tier-1 domains"
    },
    "tier_2_domain_routers": {
      "total_files": 3,
      "tokens": "800-1200",
      "loading": "on-demand",
      "folders": ["runtime/ace", "knowledge/governance", "knowledge/architecture"],
      "files": ["ace-router.json", "governance-router.json", "architecture-router.json"],
      "access_pattern": "jq (no @mcp)",
      "mutability": "static",
      "purpose": "Domain-specific routing to tier-3 targets"
    },
    "tier_3_runtime": {
      "total_files": 47,
      "tokens": "1-3K",
      "loading": "task-specific",
      "folders": ["runtime/ace", "runtime/memory", "runtime/optimization"],
      "structure": {
        "ace": "13 files (trackers + workflows + semantic suites)",
        "memory": "27 files (active/3 + history/5 + schemas/19)",
        "optimization": "3 files (token-budget, context-window, compression)"
      },
      "access_pattern": "jq for ace/, @mcp:json-jq for memory/",
      "mutability": "mixed (workflows static, memory dynamic)",
      "purpose": "Execution workflows, memory state, optimization"
    },
    "tier_3_knowledge": {
      "total_files": 50,
      "tokens": "0-5K",
      "loading": "reference",
      "folders": ["knowledge/governance", "knowledge/architecture", "knowledge/support"],
      "structure": {
        "governance": "38 files (constitution/11 + enforcement/27)",
        "architecture": "5 files (mmd, json, codemap, relation, router)",
        "support": "7 files (visualize/6 + reflection/1)"
      },
      "access_pattern": "jq on-demand only",
      "mutability": "static",
      "purpose": "Governance rules, architecture docs, support tools"
    },
    "token_savings": {
      "old_flat": "~8665 tokens",
      "new_tier_1": "~500 tokens",
      "new_tier_2": "~800-1200 tokens",
      "new_typical": "~1500-2000 tokens",
      "measured_savings": "91%",
      "total_files": 104
    }
  },
  "traces": [
    {
      "id": "1",
      "title": "Session Startup → Tier-1 Core Initialization",
      "description": "Traces how the system initializes on session start, loading architecture awareness and routing to tier-1 main router",
      "locations": [
        {
          "id": "1a",
          "title": "Architecture Awareness Mandate",
          "description": "MANDATORY first step: Load architecture.mmd to understand 3-tier flow before any operation",
          "path": "knowledge/architecture/architecture.mmd",
          "lineNumber": 1,
          "lineContent": "%%{init: {'theme':'base', 'themeVariables': {...}}}%% graph LR",
          "tier": 3,
          "access_pattern": "jq",
          "mutability": "static"
        },
        {
          "id": "1b",
          "title": "System Entry Components",
          "description": "Four files that initialize the session: global_rules, architecture.mmd, architecture.json, relation.json",
          "path": "knowledge/architecture/architecture.mmd",
          "lineNumber": 14,
          "lineContent": "subgraph SYS[\"📚 SYSTEM ENTRY - Session Startup\"]",
          "tier": 3,
          "access_pattern": "jq",
          "mutability": "static"
        },
        {
          "id": "1c",
          "title": "Tier-1 Main Router - Entry Point",
          "description": "main-router.json routes to 3 domain routers: ace_queries, governance_queries, architecture_queries",
          "path": "core/main-router.json",
          "lineNumber": 1,
          "lineContent": "{\"schema_version\": \"3.0.0\", \"pattern\": \"hierarchical\", \"tier_1_domains\": {...}}",
          "tier": 1,
          "access_pattern": "jq",
          "mutability": "static"
        },
        {
          "id": "1d",
          "title": "System Entry → Tier-1 Main Router Flow",
          "description": "All 4 system entry files route to main-router.json → domain routers on session startup",
          "path": "knowledge/architecture/architecture.mmd",
          "lineNumber": 115,
          "lineContent": "%% FLOW 1: SYSTEM ENTRY → TIER-1 MAIN ROUTER"
        }
      ]
    },
    {
      "id": "2",
      "title": "User Request → Autonomous Execution Pipeline",
      "description": "Traces the complete flow from user input through NLU analysis, confidence checking, scratchpad polling, task execution, atomic updates, and violation tracking",
      "locations": [
        {
          "id": "2a",
          "title": "User Interaction Flow (8 Steps)",
          "description": "Complete user flow: Input → NLU → Confidence Check → Scratchpad Poll → Execute → Atomic Update → Violation Log → Response",
          "path": "src/.aegiside/architecture/architecture.mmd",
          "lineNumber": 3,
          "lineContent": "subgraph USER_FLOW[\"🔄 USER INTERACTION FLOW - Autonomous Execution\"]"
        },
        {
          "id": "2b",
          "title": "0-99% Confidence Autonomous Execution",
          "description": "System executes immediately without user permission if confidence is 0-99%. Hierarchical routing through tier-1 → tier-2 → tier-3.",
          "path": "core/main-router.json",
          "lineNumber": 1,
          "lineContent": "\"tier_1_domains\": {\"ace_queries\", \"governance_queries\", \"architecture_queries\"}",
          "tier": 1,
          "access_pattern": "jq"
        },
        {
          "id": "2c",
          "title": "Scratchpad Polling for Active Tasks",
          "description": "System queries scratchpad.json in runtime/memory/active/ to find active tasks before execution",
          "path": "runtime/memory/active/scratchpad.json",
          "lineNumber": 1,
          "lineContent": "Active tasks polling mechanism",
          "tier": 3,
          "access_pattern": "@mcp:json-jq ONLY",
          "mutability": "dynamic"
        },
        {
          "id": "2d",
          "title": "ACE Workflow Auto-Triggering",
          "description": "ACE router routes to generator, reflector, or curator workflows based on task type",
          "path": "runtime/ace/ace-router.json",
          "lineNumber": 1,
          "lineContent": "Maps to generator/, reflector/, curator/ workflows",
          "tier": 2,
          "access_pattern": "jq",
          "mutability": "static"
        }
      ]
    },
    {
      "id": "3",
      "title": "MCP Enforcement → Data Access",
      "description": "All data operations routed through MCP layer, with json-jq enforced for JSON access to prevent hallucination",
      "locations": [
        {
          "id": "3a",
          "title": "6 MCP Tools",
          "description": "Enforcement layer: sequential-thinking (≥3 steps), json-jq (JSON ops ONLY), context7 (docs), exa (code), fetch (web), git (version control)",
          "path": "src/.aegiside/architecture/architecture.mmd",
          "lineNumber": 25,
          "lineContent": "subgraph MCP[\"MCP Enforcement Layer - Autonomous\"]"
        },
        {
          "id": "3b",
          "title": "Tier-Aware Tool Enforcement",
          "description": "Tool routing by tier: jq for core/ and knowledge/, @mcp:json-jq ONLY for runtime/memory/. Prevents hallucination.",
          "path": "core/main-router.json",
          "lineNumber": 1,
          "lineContent": "Tier-aware enforcement: different tools per tier",
          "tier": 1,
          "access_pattern": "jq"
        }
      ]
    },
    {
      "id": "4",
      "title": "Direct Data Access - 5 Data Stores",
      "description": "Traces access to 5 core data stores: memory-bank (8 schemas), constitution (43 articles), workflows (8 JSON), schemas (10 validators), architecture (4 files)",
      "locations": [
        {
          "id": "4a",
          "title": "Runtime Memory: 3-Tier Structure",
          "description": "27 files: active/ (3: activeContext, scratchpad, kanban), history/ (5: progress, mistakes, systemPatterns, roadmap, memory), schemas/ (19 validators + helpers). Atomic sync on active/ and history/.",
          "path": "runtime/memory/",
          "lineNumber": 1,
          "lineContent": "3-tier memory structure with atomic sync protocol",
          "tier": 3,
          "access_pattern": "@mcp:json-jq ONLY"
        },
        {
          "id": "4b",
          "title": "Constitution: 11 Files in 4 Subdirs",
          "description": "Constitution restructured: core/ (preamble + preliminary), operational/ (rights, duties, dpsp), specialized/ (parliament, executive, judiciary), governance/ (constitutional bodies). Metadata in governance-router.json.",
          "path": "knowledge/governance/constitution/",
          "lineNumber": 1,
          "lineContent": "11 JSON files across 4 subdirectories",
          "tier": 3,
          "access_pattern": "jq on-demand"
        },
        {
          "id": "4c",
          "title": "ACE Framework: 13 Workflow Files",
          "description": "13 files: generator/ (5), reflector/ (4 semantic suites), curator/ (4). Plus 3 ACE trackers. Auto-trigger via ace-router.json.",
          "path": "runtime/ace/",
          "lineNumber": 1,
          "lineContent": "13 workflow files + 3 trackers with semantic suite consolidation",
          "tier": 3,
          "access_pattern": "jq"
        },
        {
          "id": "4d",
          "title": "Schemas: 19 Validators + Helpers",
          "description": "19 files in runtime/memory/schemas/: 10 validators + 9 helpers. Validation happens before every memory write operation.",
          "path": "runtime/memory/schemas/",
          "lineNumber": 1,
          "lineContent": "19 files: 10 validators + 9 pattern helpers",
          "tier": 3,
          "access_pattern": "@mcp:json-jq"
        },
        {
          "id": "4e",
          "title": "Architecture: 5 Files",
          "description": "5 architecture files: architecture.json (metadata), architecture.mmd (visual diagram), codemap.json (flow traces), relation.json (relationship graph), architecture-router.json (tier-2 routing)",
          "path": "knowledge/architecture/",
          "lineNumber": 1,
          "lineContent": "5 architecture documentation files",
          "tier": 3,
          "access_pattern": "jq"
        }
      ]
    },
    {
      "id": "5",
      "title": "Atomic Memory Update Protocol",
      "description": "Traces the atomic update mechanism where active/ and history/ files in runtime/memory/ are updated together or rolled back on failure",
      "locations": [
        {
          "id": "5a",
          "title": "Validation → Update → Rollback Flow",
          "description": "3-step atomic protocol: (1) Fetch schemas from runtime/memory/schemas/, (2) Update active/ and history/ files, (3) On failure: Rollback to L2, On success: Commit",
          "path": "knowledge/architecture/architecture.mmd",
          "lineNumber": 179,
          "lineContent": "%% FLOW 4: MEMORY UPDATE - 3-Tier Atomic Updates (v4.0.0+)",
          "tier": 3
        }
      ]
    },
    {
      "id": "6",
      "title": "Violation Tracking & RL Scoring",
      "description": "Traces how violations are logged to progress.json with RL (Reinforcement Learning) scoring, pattern storage, and behavior optimization",
      "locations": [
        {
          "id": "6a",
          "title": "RL Feedback Loop (5 Steps)",
          "description": "5-step RL loop: Action Execution → Scoring Engine (PPO L^CLIP with ε=0.2, GAE: δ_t = r_t + γV(s_{t+1}) - V(s_t), A_t = δ_t + γλA_{t+1}) → progress.json ledger → Pattern Learning (systemPatterns.json) → Behavior Adaptation → Improve routing",
          "path": "src/.aegiside/architecture/architecture.mmd",
          "lineNumber": 42,
          "lineContent": "subgraph RL[\"RL Feedback Loop - PPO+GAE\"]"
        },
        {
          "id": "6b",
          "title": "Violation Logging → RL Delta Flow",
          "description": "Violations logged to history/progress.json → Calculate RL delta → Store patterns in history/systemPatterns → Optimize behavior → Improve routing back to tier-1 main router",
          "path": "runtime/memory/history/progress.json",
          "lineNumber": 1,
          "lineContent": "Central RL scoring and violation tracking ledger",
          "tier": 3,
          "access_pattern": "@mcp:json-jq ONLY"
        }
      ]
    },
    {
      "id": "7",
      "title": "Constitutional Petition Routing",
      "description": "Traces how legal queries are routed to constitutional articles via NLU triggers, metadata queries, semantic matching, and json-jq execution",
      "locations": [
        {
          "id": "7a",
          "title": "Petition Routing Flow (4 Steps)",
          "description": "4-step petition process: NLU detects legal keywords → Query governance-router → Semantic match (Keywords to Part to Article) → Access knowledge/governance/constitution/ → Return with citation",
          "path": "src/.aegiside/architecture/architecture.mmd",
          "lineNumber": 63,
          "lineContent": "subgraph META[\"🔍 PETITION ROUTING - Article Selection\"]"
        },
        {
          "id": "7b",
          "title": "Petition Execution Flow",
          "description": "NLU trigger → Query governance-router → Semantic match → Access knowledge/governance/constitution/ → Return article with citation",
          "path": "knowledge/governance/governance-router.json",
          "lineNumber": 1,
          "lineContent": "Maps to constitution/ and enforcement/",
          "tier": 2,
          "access_pattern": "jq"
        }
      ]
    },
    {
      "id": "8",
      "title": "Constitutional Flow Enforcement",
      "description": "Traces the Indian Constitution-inspired governance structure: Legislature → Executive → Judiciary → Constitutional Bodies",
      "locations": [
        {
          "id": "8a",
          "title": "Constitutional Flow Structure (4 Subdirs)",
          "description": "Constitution organized in 4 subdirs: core/ (preamble + preliminary), operational/ (rights, duties, dpsp), specialized/ (parliament LEGISLATURE 26-31, executive EXECUTIVE 32-35, judiciary JUDICIARY 36-38), governance/ (constitutional bodies BODIES 39-42)",
          "path": "knowledge/governance/constitution/",
          "lineNumber": 1,
          "lineContent": "4 subdirectories with 11 total files",
          "tier": 3,
          "access_pattern": "jq on-demand"
        },
        {
          "id": "8b",
          "title": "Constitutional Flow Execution",
          "description": "Flow guides execution: FLOW → Parliament (laws passed) → Executive (implemented by) → Judiciary (validated by) → Constitutional Bodies (oversight by) → back to Master Tunnel",
          "path": "src/.aegiside/architecture/architecture.mmd",
          "lineNumber": 139,
          "lineContent": "%% FLOW 7: CONSTITUTIONAL FLOW ENFORCEMENT"
        }
      ]
    }
  ],
  "key_features": [
    "3-Tier Hierarchical Routing (Core 500 → Domain 800-1.2K → Target 1-5K tokens)",
    "91% Token Savings (measured vs flat structure)",
    "Progressive Disclosure (load only what's needed per tier)",
    "Tier-Aware Enforcement (jq for core/knowledge, @mcp:json-jq for runtime/memory)",
    "Semantic Suite Consolidation (validation, error-recovery, state suites)",
    "Autonomous Execution (0-99% confidence band, NO permission needed)",
    "Atomic Memory Updates (active/ and history/ updated together or rollback)",
    "Violation Tracking (history/progress.json with RL scoring)",
    "Constitutional Flow (Legislature→Executive→Judiciary→Bodies)",
    "Domain Routing (3 tier-2 routers: ace, governance, architecture)",
    "MCP Enforcement (6 tools, tier-specific routing)",
    "Hierarchical Context Engineering (progressive disclosure, 91% savings)"
  ],
  "file_counts": {
    "tier_1_core": 2,
    "tier_2_domain_routers": 3,
    "tier_3_runtime": 47,
    "tier_3_knowledge": 50,
    "total_files": 104,
    "memory_schemas": 19,
    "ace_workflows": 13,
    "constitution_files": 11,
    "enforcement_scripts": 27,
    "architecture_files": 5,
    "mcp_tools": 6,
    "measured_token_savings": "91%"
  },
  "anti_hallucination_measures": [
    "Architecture loaded FIRST (mandatory step)",
    "Tier-1 main-router loaded before any domain access",
    "Tier-aware tool enforcement (jq vs @mcp:json-jq by location)",
    "Progressive disclosure (load incrementally, not all at once)",
    "@mcp:json-jq ONLY for runtime/memory/ (-50 RL penalty otherwise)",
    "Hierarchical routing prevents tier-jumping (-30 RL penalty)",
    "Actual flow documented (THIS FILE prevents assumptions)",
    "Codemap with tier information (verification against 3-tier structure)"
  ],
  "hierarchical_context_engineering": {
    "description": "3-tier progressive disclosure system that loads context incrementally to achieve 91% token savings",
    "tiers": [
      {
        "tier": 1,
        "name": "Core Routers",
        "tokens": 500,
        "load_frequency": "ALWAYS",
        "files": ["main-router.json", "context-orchestrator.json"],
        "purpose": "Entry point, domain routing decision"
      },
      {
        "tier": 2,
        "name": "Domain Routers",
        "tokens": "800-1200",
        "load_frequency": "On-demand by domain",
        "files": ["ace-router.json", "governance-router.json", "architecture-router.json"],
        "purpose": "Domain-specific routing to tier-3 targets"
      },
      {
        "tier": 3,
        "name": "Target Files",
        "tokens": "1-5K per target",
        "load_frequency": "Task-specific",
        "structure": "47 runtime files + 50 knowledge files",
        "purpose": "Actual execution: workflows, memory, constitution, enforcement"
      }
    ],
    "token_savings": {
      "old_flat_structure": "~8665 tokens average load",
      "new_tier_1_only": "~500 tokens (simple routing)",
      "new_tier_1_2": "~800-1700 tokens (domain routing)",
      "new_tier_1_2_3_typical": "~2000-2500 tokens (targeted execution)",
      "measured_savings": "91% (from scratchpad Phase 7 testing)",
      "total_files": 104
    }
  }
}
